---
layout: post
title:      "Rails App Project and Process"
date:       2021-01-25 21:36:21 +0000
permalink:  rails_app_project_and_process
---


Wow, well this module has been a pretty long one for me, I asked to repeat it because I felt like it was very important to have more of a grasp on the concepts of this module than I felt that I had at the time. I still don't know everything of course as that will come with more and more practice and actually making rails apps regularly but this time around what I did I feel I actively got better at was googling. I felt like before when I would try googling things maybe I just wasn't searching for the correct key words or didn't have an appropriate understanding of what I was googling for it to be beneficial. This time around though it helped me get through a lot of moments where I was stuck, I even was able at some parts to copy/paste some code and alter it a bit which felt like to me means I'm grasping things a bit better than before as that's what I'm constantly reading on the interenet is a normal part of development. Checking stack overflow, api doc, and the rails guides and getting what I needed out of those really helped and understanding the browser errors you might get as well, I'm still not great at understanding what might be wrong with every browser eroor I get but again with more practice will come more understanding. 

My process for this project was actually a bit terrible and will most likely come up in review as I have a lack of commits due to the way I went about it. Pretty much I was so stressed about just making sure my app meets all the requirements that I had a few apps I was starting without creating a repo so I was doing work without commiting anything essentially I just was in such a rush to try and get things done since my work schedule is pretty hectic. 

But my process was 1st and I think it might be a good idea to knock this out at the beginning of any app; sort out your user and session controller/3rd party auth so you can login/logout/signup, set up all your views and crud functionality for a user, set up all your validations for your user model and get all your helper methods made; current_user, logged_in? etc so those can be used througout your app, theyll make things easier later as I've found when I don't do this that I'll hit road blocks when it would've just been handy to have access to that current_user method. 

After all that is done and working correctly I then think about what my other models are going to be and the associations between them, draw it out if it helps, make sure you've updated your database tables with whatever foreign keys they may need, run your migration so that is all set up, and set up all the basic logic you need for all actions in any new controllers you've made, set up any private methods/user_params etc. Once all this is done check the current routes available and then think of what routes you'll actually need for your app so you can start planning out how you'll be nesting your routes, for example in my app the way I have my comment actions nested under users and photos means I don't really need any views for comments, just the partial I made for comments(new/edit) that I am rendering elsewhere and I know will work because of my associations and the way my routes are nested. I do still have a "new" and "edit" view in comments but I can safely delete those since the partial is taking care of them. 

So once those things were done I relied a lot on the rails console to check that things work the way they should in terms of displaying associated data and once something worked in the rails console usually I was able to plug that into a view and I'd know it will work because it worked in console, it didn't always but then that would lead me to doing some googling to figure out why/where I went wrong which would help my understanding of why something wasn't working. 

Again, I still have a lot to learn and am really putting in an effort and just want to be building an app every day to get better so I look forward to doing more, look forward to React and look forward to the review where hopefully I can ask some questions, gain more perspective and feel more comfortable moving on.
